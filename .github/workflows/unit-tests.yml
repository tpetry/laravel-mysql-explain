name: Unit Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      database:
        image: container-registry.oracle.com/mysql/community-server:8.0
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: testing
          MYSQL_PASSWORD: testing
        ports:
          - 3306:3306
    strategy:
      fail-fast: false
      matrix:
        php: [8.0, 8.1, 8.2, 8.3]
        laravel: [6.*, 7.*, 8.*, 9.*, 10.*, 11.*]
        stability: [prefer-lowest, prefer-stable]
        exclude:
          # These combinations should work, but there is a problem when testing...
          - laravel: 8.*
            php: 8.1
          - laravel: 8.*
            php: 8.2
          - laravel: 8.*
            php: 8.3
          # Laravel 12.x only supports PHP ^8.2
          - laravel: 12.*
            php: 8.0
          - laravel: 12.*
            php: 8.1
          # Laravel 11.x only supports PHP ^8.2
          - laravel: 11.*
            php: 8.0
          - laravel: 11.*
            php: 8.1
          # Laravel 10.x only supports PHP ^8.1
          - laravel: 10.*
            php: 8.0
          # Laravel 7.x only supports PHP 7.2-8.0
          - laravel: 7.*
            php: 8.1
          - laravel: 7.*
            php: 8.2
          - laravel: 7.*
            php: 8.3
          # Laravel 6.x only supports PHP 7.2-8.0
          - laravel: 6.*
            php: 8.1
          - laravel: 6.*
            php: 8.2
          - laravel: 6.*
            php: 8.3

    name: L${{ matrix.laravel }} - P${{ matrix.php }} - ${{ matrix.color }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show

      - name: Execute tests
        run: vendor/bin/phpunit
        env:
          DB_DATABASE: testing
          DB_USERNAME: testing
          DB_PASSWORD: testing
